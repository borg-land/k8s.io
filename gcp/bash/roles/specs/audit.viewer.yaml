# an aggregate of different service roles to allow auditing of all resources
# in the organization hierarchy using GCP console or gcloud commands
title: Audit Viewer
description: View access to resources
name: audit.viewer
include:
  roles:
  # view/read-only roles for specific services of interest
  # TODO: consider using roles/viewer instead of per-service?
  #
  # read access to bigquery data resources, but not their contents (e.g. datasets, tables, views)
  - roles/bigquery.metadataViewer
  # read access to bigquery resource resources (e.g. jobs, reservations)
  - roles/bigquery.resourceViewer
  # read access to cloud assets metadata
  - roles/cloudasset.viewer
  # TODO: determine if viewing builds could expose anything sensitive
  # - roles/cloudbuild.builds.viewer
  # read access to cloudkms public keys
  # ref: https://cloud.google.com/kms/docs/reference/permissions-and-roles#access-control-guidelines
  - roles/cloudkms.publicKeyViewer
  # full access to trace console, but is filtered back to read-only
  # ref: https://cloud.google.com/trace/docs/iam#roles
  - roles/cloudtrace.user
  # read access to compute
  - roles/compute.viewer
  # read access to compute
  - roles/container.clusterViewer
  # read access to dns
  - roles/dns.reader
  # read access to logs (NB: removing permissions to create/run/delete queries)
  - roles/logging.viewer
  # read access to monitoring
  - roles/monitoring.viewer
  # read access to org policies
  - roles/orgpolicy.policyViewer
  # read access to pubsub schemas, snapshots, subscriptions, topics (but not messages)
  - roles/pubsub.viewer
  # read access to run configurations, olocations, reviewers, routes, services
  - roles/run.viewer
  # read access to secrets metadata (not their contents)
  - roles/secretmanager.viewer
  # read access to service states and operations
  - roles/serviceusage.serviceUsageViewer

  # meta roles (regardless of roles/viewer)
  #
  # read access for the project hierarchy (org, folders, projects)
  - roles/browser
  # *.list and *.getIamPolicy
  - roles/iam.securityReviewer

  # specific permissions that don't come from a well-scoped pre-defined role
  permissions:
  # for gsutil _ get: cors, iam, label, logging, lifecycle, retention, ubla
  - storage.buckets.get

  # use regexes to filter permissions pulled in from the above
  permissionRegexes:
  # only include (get|list).* (e.g. get, getIamPolicy, etc.)
  - \.(list|get)[^\.]*$
  # include some exceptions from service-specific roles:
  # ...everything from roles/cloudasset.viewer
  - ^cloudasset.assets.(analyze|export|search)[^\.]*$
  # ...this specific permission from roles/cloudkms.publicKeyViewer
  - cloudkms.cryptoKeyVersions.viewPublicKey
  # ...this specific permission from roles/serviceusage.serviceUsageConsumer
  - serviceusage.services.use
exclude:
  permissionRegexes:
  # permissions that would modify logging queries
  - ^logging.queries.(create|delete|update)$
  # permissions with custom roles support level NOT_SUPPORTED
  # ref: https://cloud.google.com/iam/docs/custom-roles-permissions-support
  - ^cloudonefs.
  - ^gcp.redisenterprise.
  - ^datastore.
  - ^domains.registrations.
  - ^gkehub.
  - ^servicemanagement.consumerSettings
