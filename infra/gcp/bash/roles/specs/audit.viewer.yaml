# an aggregate of different service roles to allow auditing of all resources
# in the organization hierarchy using GCP console or gcloud commands
title: Audit Viewer
description: View access to resources
name: audit.viewer
include:
  roles:
  # view/read-only access to entire kubernetes.io GCP organization except sensitive PII data via IAM Deny Policy
  - roles/viewer

  # meta/org-level roles (regardless of roles/viewer)
  # read access for the project hierarchy (org, folders, projects)
  - roles/browser
  # *.list and *.getIamPolicy
  - roles/iam.securityReviewer
  # Security Command Center read-only permissions
  - roles/cloudsecurityscanner.viewer
  - roles/securitycenter.adminViewer
  - roles/securitycenter.assetsViewer
  - roles/securitycenter.bigQueryExportsViewer

  # use regexes to filter permissions pulled in from the above
  permissionRegexes:
  # include some exceptions from service-specific roles:
  # ...everything from roles/cloudasset.viewer
  - ^cloudasset.assets.(analyze|export|search)[^\.]*$
  # ...this specific permission from roles/cloudkms.publicKeyViewer
  - cloudkms.cryptoKeyVersions.viewPublicKey
  # ...this specific permission from roles/serviceusage.serviceUsageConsumer
  - serviceusage.services.use
exclude:
  permissionRegexes:
  # WE ARE USING IAM DENY POLICIES FOR GCS SERVICES ON PROJECTS WHERE THIS
  # GROUP IS NOT ALLOWED TO READ. THIS IS USUALLY PII PROJECTS.
  - bigquery.models.getData # Remove when IAM Deny supports this permissions
  - bigquery.tables.getData # Remove when IAM Deny supports this permissions
  # permissions with custom roles support level NOT_SUPPORTED
  # ref: https://cloud.google.com/iam/docs/custom-roles-permissions-support
  - ^cloudonefs.
  - ^gcp.redisenterprise.
  - ^datastore.
  - ^domains.registrations.
  - ^servicemanagement.consumerSettings
