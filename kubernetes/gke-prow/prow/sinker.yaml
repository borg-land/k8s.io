apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: default
  name: sinker
  labels:
    app: sinker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sinker
  template:
    metadata:
      labels:
        app: sinker
    spec:
      serviceAccountName: sinker
      containers:
      - name: sinker
        args:
        - --config-path=/etc/config/config.yaml
        - --job-config-path=/etc/job-config
        - --dry-run=false
        image: us-docker.pkg.dev/k8s-infra-prow/images/sinker:v20240802-66b115076
        env:
        # Use KUBECONFIG envvar rather than --kubeconfig flag in order to provide multiple configs to merge.
        - name: KUBECONFIG
          value: "/etc/kubeconfig-k8s-infra-prow/kubeconfig:/etc/kubeconfig-k8s-infra-prow-build/kubeconfig:/etc/kubeconfig-k8s-infra-prow-build-trusted/kubeconfig:/etc/kubeconfig-eks-prow-build-cluster/kubeconfig:/etc/kubeconfig-k8s-infra-kops-prow-build/kubeconfig"
        # AWS_ variables needed to assume role to access the prow-build-cluster EKS cluster.
        - name: AWS_ROLE_ARN
          value: arn:aws:iam::468814281478:role/Prow-EKS-Admin
        - name: AWS_WEB_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/aws-iam-token/serviceaccount/token
        - name: AWS_REGION
          value: us-east-2
        ports:
        - name: metrics
          containerPort: 9090
        volumeMounts:
        - mountPath: /etc/kubeconfig-k8s-infra-prow
          name: kubeconfig-k8s-infra-prow
          readOnly: true
        - mountPath: /etc/kubeconfig-k8s-infra-prow-build
          name: kubeconfig-k8s-infra-prow-build
          readOnly: true
        - mountPath: /etc/kubeconfig-k8s-infra-prow-build-trusted
          name: kubeconfig-k8s-infra-prow-build-trusted
          readOnly: true
        - mountPath: /etc/kubeconfig-eks-prow-build-cluster
          name: kubeconfig-eks-prow-build-cluster
          readOnly: true
        - mountPath: /etc/kubeconfig-k8s-infra-kops-prow-build
          name: kubeconfig-k8s-infra-kops-prow-build
          readOnly: true
        - name: config
          mountPath: /etc/config
          readOnly: true
        - name: job-config
          mountPath: /etc/job-config
          readOnly: true
        # AWS IAM token needed to assume role to access the prow-build-cluster EKS cluster.
        - name: aws-iam-token
          mountPath: /var/run/secrets/aws-iam-token/serviceaccount
          readOnly: true
      volumes:
      - name: kubeconfig-k8s-infra-prow
        secret:
          defaultMode: 420
          secretName: kubeconfig-k8s-infra-prow
      - name: kubeconfig-k8s-infra-prow-build
        secret:
          defaultMode: 420
          secretName: kubeconfig-k8s-infra-prow-build
      - name: kubeconfig-k8s-infra-prow-build-trusted
        secret:
          defaultMode: 420
          secretName: kubeconfig-k8s-infra-prow-build-trusted
      - name: kubeconfig-eks-prow-build-cluster
        secret:
          defaultMode: 420
          secretName: kubeconfig-eks-prow-build-cluster
      - name: kubeconfig-k8s-infra-kops-prow-build
        secret:
          defaultMode: 420
          secretName: kubeconfig-k8s-infra-kops-prow-build
      - name: config
        configMap:
          name: config
      - name: job-config
        configMap:
          name: job-config
      # AWS IAM token needed to assume role to access the prow-build-cluster EKS cluster.
      - name: aws-iam-token
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              audience: sts.amazonaws.com
              expirationSeconds: 86400
              path: token
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: sinker
  namespace: default
  name: sinker
spec:
  ports:
    - name: metrics
      port: 9090
      protocol: TCP
  selector:
    app: sinker
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "sinker"
  annotations:
    iam.gke.io/gcp-service-account: prow-control-plane@k8s-infra-prow.iam.gserviceaccount.com
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: "sinker"
rules:
  - apiGroups:
    - "prow.k8s.io"
    resources:
    - prowjobs
    verbs:
    - delete
    - list
    - watch
    - get
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    resourceNames:
    - prow-sinker-leaderlock
    verbs:
    - get
    - update
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - create
  - apiGroups:
    - ""
    resources:
    - configmaps
    resourceNames:
    - prow-sinker-leaderlock
    verbs:
    - get
    - update
  - apiGroups:
    - ""
    resources:
    - configmaps
    - events
    verbs:
    - create
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - delete
      - list
      - watch
      - get
      - patch
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: "sinker"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: "sinker"
subjects:
- kind: ServiceAccount
  name: "sinker"

